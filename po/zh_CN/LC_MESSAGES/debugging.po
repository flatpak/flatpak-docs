# PikachuHy <pikachuhy@163.com>, 2018. #zanata
# WTZ <zwpwjwtz@126.com>, 2018. #zanata
msgid ""
msgstr ""
"Project-Id-Version:  Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-02-18 06:55+0530\n"
"PO-Revision-Date: 2018-11-03 01:03-0400\n"
"Last-Translator: PikachuHy <pikachuhy@163.com>\n"
"Language: zh_Hans_CN\n"
"Language-Team: Chinese (Simplified, China)\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../debugging.rst:2
msgid "Debugging"
msgstr "调试"

#: ../../debugging.rst:4
msgid "This section includes documentation on how to debug Flatpak apps."
msgstr "这部分文档包含如何调试Flatpak应用。"

#: ../../debugging.rst:7
msgid "Debug packages"
msgstr ""

#: ../../debugging.rst:9
msgid ""
"Before debugging, it is essential to install the debug packages used by "
"the application. This can be done by::"
msgstr ""

#: ../../debugging.rst:15
msgid ""
"This will install the SDK, the Debug SDK and the Debug extension for the "
"application."
msgstr ""

#: ../../debugging.rst:18
msgid ""
"If it's a crash in the graphics stack, the GL debug extension will also "
"be needed."
msgstr ""

#: ../../debugging.rst:21
msgid "First, note down the runtime branch used by the application::"
msgstr ""

#: ../../debugging.rst:26
msgid ""
"In the above example it is the Freedesktop SDK and the branch is "
"``24.08``. Then install the ``GL.debug`` extension for the above branch::"
msgstr ""

#: ../../debugging.rst:31
msgid ""
"The same process should be followed for any extension or baseapp used by "
"the app."
msgstr ""

#: ../../debugging.rst:35
msgid "Debug shell"
msgstr ""

#: ../../debugging.rst:37
msgid ""
"A debugging environment can be created by starting a shell inside the "
"sandbox::"
msgstr ""

#: ../../debugging.rst:42
#, fuzzy
msgid ""
"This creates a sandbox for the application with the given ID and, instead"
" of running the application, runs a shell inside the sandbox. The "
"``--devel`` option tells Flatpak to use the SDK as the runtime, which "
"includes various debugging tools and it also adjusts the sandbox setup to"
" enable debugging."
msgstr ""
"这是如何工作的呢？ ``--devel`` 选项告诉Flatpak使用SDK作为运行时，而SDK含有像 ``gdb`` 这样的调试工具。 "
"``--devel`` 选项也让沙盒初始化时启动调试。"

#: ../../debugging.rst:48
msgid ""
"It is also possible to get a shell inside an application sandbox without "
"having to install it. This is done using ``flatpak-builder``'s ``--run`` "
"option::"
msgstr "在没有安装调试扩展的情况下，也可以在应用沙盒中运行shell。这通过使用 ``flatpak-builder`` 的 ``--run`` 选项完成："

#: ../../debugging.rst:54
msgid ""
"This sets up a sandbox that is populated with the build results found in "
"the build directory, and runs a shell inside it."
msgstr "启动一个含有构建结果的沙盒，然后在沙盒里运行shell。"

#: ../../debugging.rst:58
msgid "Using GDB in the sandbox"
msgstr ""

#: ../../debugging.rst:60
msgid ""
"Note that :ref:`debugging:Debug packages` must be installed to get "
"meaningful traces from GDB. Once inside the :ref:`debugging:Debug shell` "
"to run the application with ``gdb`` ::"
msgstr ""

#: ../../debugging.rst:66
msgid "To pass arguments to the application::"
msgstr ""

#: ../../debugging.rst:71
msgid ""
"A breakpoint can also be set for example on the ``main`` function and "
"once it is reached the source code can be listed::"
msgstr ""

#: ../../debugging.rst:78
msgid ""
"Once the bug is reproduced, if it is a crash it will automatically return"
" to the gdb prompt. In case of a freeze pressing Ctrl+c will cause it to "
"return to the gdb prompt. Now enable logging to a file (this will be "
"saved in the working directory and the Flatpak needs filesystem access to"
" that ``--filesystem=$(pwd)``)::"
msgstr ""

#: ../../debugging.rst:86
msgid "Then to get the backtrace::"
msgstr ""

#: ../../debugging.rst:90
msgid "Or for all threads, in case of a multi-threaded program::"
msgstr ""

#: ../../debugging.rst:94
msgid ""
"Note that ``gdb`` inside the sandbox cannot use debug symbols from host's"
" `debuginfod servers <https://sourceware.org/elfutils/Debuginfod.html>`_."
msgstr ""

#: ../../debugging.rst:97
msgid ""
"Please also see the `GDB user manual "
"<https://sourceware.org/gdb/current/onlinedocs/gdb.html/>`_ for a more "
"complete overview on how to use GDB."
msgstr ""

#: ../../debugging.rst:101
msgid "Getting stacktraces from a crash"
msgstr ""

#: ../../debugging.rst:103
msgid ""
"If an application crashed and the system has coredumps and `systemd-"
"coredump <https://www.freedesktop.org/software/systemd/man/latest"
"/systemd-coredump.html#>`_ enabled, a coredump will be logged. Get the "
"``PID`` from that coredump::"
msgstr ""

#: ../../debugging.rst:109
msgid ""
"Now run ``flatpak-coredumpctl`` (this requires :ref:`debugging:Debug "
"packages` to be installed)::"
msgstr ""

#: ../../debugging.rst:116
#, fuzzy
msgid "Using other debugging tools"
msgstr "运行调试工具"

#: ../../debugging.rst:118
msgid ""
"``org.freedesktop.Sdk`` also includes other debugging tools like "
"`Valgrind <https://valgrind.org/>`_ which is useful to find memory leaks."
" Once inside the :ref:`debugging:Debug shell`, it can be run with::"
msgstr ""

#: ../../debugging.rst:124
msgid ""
"`Strace <https://strace.io/>`_ can be useful to check what an application"
" is doing. For example, to trace ``openat(), read()`` calls::"
msgstr ""

#: ../../debugging.rst:129
msgid ""
"`Perf <https://perfwiki.github.io/main/>`_ requires access to "
"``--filesystem=/sys`` to run::"
msgstr ""

#: ../../debugging.rst:135
#, fuzzy
msgid "Creating a Debug extension"
msgstr "创建调试扩展"

#: ../../debugging.rst:137
#, fuzzy
msgid ""
"Like many other packaging systems, Flatpak separates bulky debug "
"information from regular content and ships it separately, in a Debug  "
"extension."
msgstr "像其他的包系统一样，Flatpak也把笨重的调试信息和常规内容分离，作为 ``.Debug`` 扩展单独使用。"

#: ../../debugging.rst:140
#, fuzzy
msgid ""
"When an application is built, ``flatpak-builder`` automatically creates a"
" Debug extension. This can be disabled with the ``no-debuginfo`` option."
msgstr ""
"当构建一个应用时， ``flatpak-builder`` 自动创建一个 ``.Debug`` 扩展。可以使用 ``no-debuginfo`` "
"选项禁止这个行为。"

#: ../../debugging.rst:144
msgid ""
"To install the Debug extension created locally, pass ``--install`` to "
"``flatpak-builder`` which will set up a new remote for the build. The "
"remotes available can be checked with::"
msgstr ""

#: ../../debugging.rst:150
msgid "Then install the Debug extension from that remote::"
msgstr ""

#: ../../debugging.rst:155
msgid "Overriding sandbox permissions"
msgstr "覆盖沙盒权限"

#: ../../debugging.rst:157
msgid ""
"It is sometimes useful to have extra permissions in a sandbox when "
"debugging. This can be achieved using the various sandbox options that "
"are accepted by the run command. For example::"
msgstr "当调试的时候，使用额外的权限有时是很有用的。这可以通过使用运行命令接受的各种选项实现。如："

#: ../../debugging.rst:163
msgid ""
"This command runs a shell in the sandbox for the given application, "
"granting it system bus access to the bus name owned by logind."
msgstr "此命令在给定应用程序的沙箱中运行shell，授予它访问logind对应的D-Bus服务的权限。"

#: ../../debugging.rst:167
#, fuzzy
msgid "Inspecting portal permissions"
msgstr "覆盖沙盒权限"

#: ../../debugging.rst:169
msgid ""
"Flatpak has a number of commands that allow to manage portal permissions "
"for applications."
msgstr ""

#: ../../debugging.rst:172
msgid "To see all portal permissions of an application, use::"
msgstr ""

#: ../../debugging.rst:176
msgid "To reset all portal permissions of an application, use::"
msgstr ""

#: ../../debugging.rst:182
msgid "Interacting with running sandboxes"
msgstr ""

#: ../../debugging.rst:184
msgid ""
"You can see all the apps that are currently running in Flatpak sandboxes "
"(since 1.2)::"
msgstr ""

#: ../../debugging.rst:189
msgid "And, if you need to, you can terminate one by force (since 1.2)::"
msgstr ""

#: ../../debugging.rst:194
msgid "Audit session or system bus traffic"
msgstr ""

#: ../../debugging.rst:196
msgid ""
"A ``--socket=session-bus`` or a ``--socket=system-bus`` permission must "
"not be present for the logging to work."
msgstr ""

#: ../../debugging.rst:199
msgid ""
"Session bus traffic can be audited by passing ``--log-session-bus`` to "
"``flatpak run``::"
msgstr ""

#: ../../debugging.rst:204
msgid ""
"This can be useful to figure out the bus names used by an application and"
" the corresponding ``--talk-name`` or ``--own-name`` permissions "
"required::"
msgstr ""

#: ../../debugging.rst:210
msgid ""
"Similarly, system bus traffic can be audited by passing ``--log-system-"
"bus`` to ``flatpak run``. This also requires a system bus name to be "
"present in the permissions. If not a bogus bus name can be passed::"
msgstr ""

#~ msgid ""
#~ "Because Flatpak runs each application "
#~ "inside a sandbox, debugging tools can't"
#~ " be used in the usual way, and"
#~ " must instead be run from inside "
#~ "the sandbox. To get a shell inside"
#~ " an application's sandbox, it can be"
#~ " run with the ``--command`` option::"
#~ msgstr ""
#~ "因为Flatpak在沙盒中运行应用，调试工具不能以通常的方式使用，而必须运行在沙盒中。为了在应用沙盒中运行shell，需要使用 "
#~ "``--command`` 选项运行："

#~ msgid ""
#~ "This creates a sandbox for the "
#~ "application with the given ID and, "
#~ "instead of running the application, runs"
#~ " a shell inside the sandbox. From "
#~ "the shell prompt, it is then "
#~ "possible to run the application. This"
#~ " can also be done using any "
#~ "debugging tools that you want to "
#~ "use. For example, to run the "
#~ "application with ``gdb``::"
#~ msgstr ""
#~ "为给定ID的应用创建一个沙盒，而不是运行应用，在沙盒中运行shell。根据shell的提示， "
#~ "然后可以运行应用。也可以使用任何你想用的调试工具。如，通过 ``gdb`` 运行应用："

#~ msgid ""
#~ "The Freedesktop SDK (on which many "
#~ "others are based), includes a range "
#~ "of debugging tools, such as ``gdb``, "
#~ "``strace``, ``nm``, ``dbus-send``, ``dconf``,"
#~ " and many others."
#~ msgstr ""
#~ "Freedesktop SDK（许多其他的SDK基于这个）含有许多调试工具，如： ``gdb`` ,"
#~ "  ``strace`` ,  ``nm`` ,  ``dbus-"
#~ "send`` ,  ``dconf`` 等等。"

#~ msgid ""
#~ "``gdb`` is much more useful when "
#~ "it has access to debug information "
#~ "for the application and the runtime "
#~ "it is using. Flatpak splits this "
#~ "information off into debug extensions, "
#~ "which you should install before "
#~ "debugging an application::"
#~ msgstr "当有权限调试应用和使用的运行时时， ``gdb`` 是很有用的。Flatpak会把调试信息分离到扩展中，你在调试前需要安装这些扩展："

#~ msgid ""
#~ "When the ``--devel`` option is used, "
#~ "Flatpak will automatically use any "
#~ "matching debug extensions that it finds."
#~ msgstr "当使用 ``--devel`` 选项时，Flatpak将自动使用任何它能找到的匹配的调试扩展。"

#~ msgid ""
#~ "`Perf <https://perf.wiki.kernel.org/index.php/Main_Page>`_ "
#~ "requires access to ``--filesystem=/sys`` to"
#~ " run::"
#~ msgstr ""

#~ msgid ""
#~ "This can be useful to figure out"
#~ " the bus names used by an "
#~ "application and the corresponding ``--talk-"
#~ "names`` or ``--own-names`` required::"
#~ msgstr ""

#~ msgid ""
#~ "Session or system bus traffic can "
#~ "be audited by passing ``--log-"
#~ "session-bus`` and ``--log-system-bus`` "
#~ "respectively to ``flatpak run``::"
#~ msgstr ""

