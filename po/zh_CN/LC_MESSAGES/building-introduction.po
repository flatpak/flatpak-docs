# PikachuHy <pikachuhy@163.com>, 2018. #zanata
# WTZ <zwpwjwtz@126.com>, 2018. #zanata
# ZiqiangXu <ziqiang_xu@yeah.net>, 2018. #zanata
msgid ""
msgstr ""
"Project-Id-Version:  Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-31 14:18-0300\n"
"PO-Revision-Date: 2018-11-03 11:05-0400\n"
"Last-Translator: PikachuHy <pikachuhy@163.com>\n"
"Language: zh_Hans_CN\n"
"Language-Team: Chinese (Simplified, China)\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../building-introduction.rst:2
msgid "Building Introduction"
msgstr "构建介绍"

#: ../../building-introduction.rst:4
msgid ""
":doc:`first-build` has already provided a quick demonstration of how "
"applications get built with Flatpak. This page provides an additional "
"general overview of what's involved."
msgstr ""
"我们已在 :doc:`first-build` "
"一节中展示了如何使用Flatpak构建应用的简单案例。在本节中，我们将概述讨论构建过程涉及到的其他要素。"

#: ../../building-introduction.rst:9
msgid "flatpak-builder"
msgstr "flatpak-builder"

#: ../../building-introduction.rst:11
msgid ""
"``flatpak-builder`` is the primary tool for building Flatpak "
"applications. It allows you to take the source files for an application "
"and build it into a Flatpak application. It also allows multiple other "
"dependencies to be built at the same time, which get bundled into the "
"build."
msgstr ""
"``flatpak-builder``  是构建Flatpak应用的基础工具. "
"它允许您获取应用程序的源文件，并将其构建为一个Flatpak应用程序。它还允许同时构建多个其他依赖项，这些依赖项被捆绑到构建中。"

#: ../../building-introduction.rst:16
msgid ""
"The input to ``flatpak-builder`` is a manifest file. This specifies the "
"parameters for the application that will be built, such as its name and "
"which runtime it will depend on. The manifest also lists all the modules "
"that are to be built as part of the build process. A source for each "
"module can be specified, including links to file archives or version "
"control repositories. One of the modules (usually the last one) is the "
"application code itself."
msgstr ""
"输入给  ``flatpak-builder``  "
"的是一个清单文件。它指定了要构建应用的参数，例如它的名字和依赖的运行时。这个清单还列出了作为构建过程的一部分构建的所有模块（不是很确定，译者注）。可以指定每个模块的源，包括指向文件存档或版本控制存储库的链接。某个模块（通常是最后一个）是应用代码它本身。"

#: ../../building-introduction.rst:24
msgid "The basic format used to invoke ``flatpak-builder`` is::"
msgstr "调用  ``flatpak-builder``  的基本格式是:"

#: ../../building-introduction.rst:28
msgid ""
"Where ``<build-dir>`` is the path to the directory that the application "
"will be built into, and ``<manifest>`` is the path to a manifest file. "
"The contents of ``<build-dir>`` can be useful for testing and debugging "
"purposes, but is generally treated as an artifact of the build process."
msgstr ""
"其中 ``<build-dir>`` 是构建应用程序的目标文件夹，``<manifest>`` 是清单文件的路径。``<build-dir>`` "
"中的内容可以被用来调试和测试应用程序，不过大多数情况下它只是构建过程的中间产物。"

#: ../../building-introduction.rst:33
msgid "When ``flatpak-builder`` is run:"
msgstr "当  ``flatpak-builder``  运行的时候："

#: ../../building-introduction.rst:35
msgid "The build directory is created, if it doesn't already exist"
msgstr "构建目录如果不存在则进行创建"

#: ../../building-introduction.rst:36
msgid "The source code for each module is downloaded and verified"
msgstr "下载和验证每个模块的源代码"

#: ../../building-introduction.rst:37
msgid "The source code for each module is built and installed"
msgstr "构建和安装每个模块的源代码"

#: ../../building-introduction.rst:38
#, fuzzy
msgid "The build is finished by setting sandbox permissions"
msgstr "设置沙箱的权限并完成构建"

#: ../../building-introduction.rst:39
msgid ""
"The build result is exported to a repository (which will be created if it"
" doesn't exist already)"
msgstr "构建结果会被导出到仓库（如果不存在将会被创建）"

#: ../../building-introduction.rst:42
msgid "The application can then be installed from the repository and run."
msgstr "然后这个应用就可以从仓库进行安装和运行了"

#: ../../building-introduction.rst:45
msgid "Software Development Kits (SDKs)"
msgstr "软件开发套件（SDKs）"

#: ../../building-introduction.rst:47
msgid ""
"Instead of being built using the host environment, Flatpak applications "
"are built inside a separate environment, called an SDK."
msgstr "Flatpak应用是在一个称作SDK的隔离环境中，而不是宿主的环境中构建的。"

#: ../../building-introduction.rst:50
msgid ""
"SDKs are like the regular runtime that applications run in. The "
"difference is that SDKs also include all the development resources and "
"tools that are required to build an application, such as build and "
"packaging tools, header files, compilers and debuggers."
msgstr "这些SDK类似与应用所运行在的常规运行时。不同的是，这些SDK还包含了构建一个应用需要的所有开发资源和工具，例如构建和打包工具、头文件、编译器和调试器"

#: ../../building-introduction.rst:55
#, fuzzy
msgid ""
"Each runtime has an accompanying SDK. For example, there is both a GNOME "
"43 runtime and a GNOME 43 SDK. Applications that use the runtime are "
"built with the matching SDK."
msgstr ""
"每个运行时都有一个附带的SDK。例如，一个GNOME 3.26 runtime和一个GNOME 3.26 "
"SDK同时存在。使用这个运行时的是用这个对应的SDK构建的。"

#: ../../building-introduction.rst:59
#, fuzzy
msgid ""
"Like runtimes, SDKs will sometimes be automatically installed for you, "
"but if you do need to manually install them, they are installed in the "
"same way as applications and runtimes, such as::"
msgstr "和运行时一样，一般SDK会自动地进行安装。但是如果你需要手动安装他们，他们的安装和运行时的安装一样，例如："

