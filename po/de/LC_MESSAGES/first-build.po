# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, 2018, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
# Markus Richter <semanticdesign@pm.me>, 2019. #zanata
msgid ""
msgstr ""
"Project-Id-Version:  Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-26 16:32-0300\n"
"PO-Revision-Date: 2019-06-26 12:05-0400\n"
"Last-Translator: Markus Richter <semanticdesign@pm.me>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../first-build.rst:2
msgid "Building your first Flatpak"
msgstr "Erstellen des ersten Flatpaks"

#: ../../first-build.rst:4
#, fuzzy
msgid ""
"This tutorial provides a quick introduction to build, install and share a"
" basic flatpak package."
msgstr ""
"Dieses Tutorial liefert eine schnelle Einführung in die Erstellung von "
"Flatpaks. In diesem lernt man, wie man grundsätzlich eine einfache "
"Flatpak-Anwendung erstellt, die dann installiert und gestartet werden "
"kann."

#: ../../first-build.rst:7
msgid ""
"In order to complete this tutorial, please install ``flatpak`` and "
"``flatpak-builder`` packages from your distribution. The `setup page "
"<https://flatpak.org/setup/>`_ covers steps for most of the popular "
"distributions."
msgstr ""

#: ../../first-build.rst:11
msgid "Then install the Flathub repository `userwide`::"
msgstr ""

#: ../../first-build.rst:16
#, fuzzy
msgid "1. Runtime and SDK"
msgstr "1. Installieren einer Laufzeitumgebung und des zugehörigen SDK"

#: ../../first-build.rst:18
#, fuzzy
msgid ""
"Flatpak requires every app to specify a runtime for its basic runtime "
"dependencies and a matching SDK which is a superset of the runtime "
"containing additional development tools, libraries and headers."
msgstr ""
"Flatpak fordert von jeder Anwendung, eine Laufzeitumgebung zu "
"spezifizieren, die für es für die Auflösung der grundsätzlichen "
"Abhängigkeiten benötigt. Jede Laufzeitumgebung hat ein zugehöriges SDK "
"(Software Development Kit), das alle Bestandteile der Laufzeitumgebung "
"enthält, sowie Header-Dateien und Entwicklung-Tools. Das SDK wird "
"benötigt, um Anwendungen für die Laufzeitumgebung zu erstellen."

#: ../../first-build.rst:22
#, fuzzy
msgid ""
"In this tutorial we will use the Freedesktop 23.08 runtime and SDK from "
"the Flathub repository."
msgstr ""
"In diesem Tutorial verwenden wir Laufzeitumgebung und SDK zu Freedesktop "
"18.08. Um diese zu installieren, verwendet man:: "

#: ../../first-build.rst:26
#, fuzzy
msgid "2. Add a manifest"
msgstr "3. Hinzufügen eines Manifests"

#: ../../first-build.rst:28
#, fuzzy
msgid ""
"Each Flatpak is built using a manifest file which provides basic "
"information about the application and build instructions."
msgstr ""
"Jedes Flatpak wird unter Verwendung einer Manifest-Datei gebaut, dieses "
"enthält grundlegende Informationen über die Anwendung und Instruktionen "
"darüber, wie es gebaut werden soll. Um ein Manifest zu der ``hello "
"world``-anwendung hinzuzufügen, fügt man das Folgende in eine leere Datei"
" ein::"

#: ../../first-build.rst:31
#, fuzzy
msgid ""
"To create a manifest for our hello world app, paste the following into an"
" empty file and save it as ``org.flatpak.Hello.yml``."
msgstr "Dies wird in eine leere Datei eingefügt und als ``hello.sh`` gespeichert."

#: ../../first-build.rst:52
msgid ""
"The `application` here is a simple script, that is self contained in the "
"manifest! The `install -Dm755 "
"<https://www.gnu.org/software/coreutils/manual/html_node/install-"
"invocation.html>`_ command will create a file containing our hello world "
"script in ``/app/bin/hello`` with `execution permissions "
"<https://www.gnu.org/software/coreutils/manual/html_node/Numeric-"
"Modes.html>`_ inside the sandbox."
msgstr ""

#: ../../first-build.rst:55
msgid ""
"In a more complex application, the manifest would list multiple modules "
"and build instructions."
msgstr ""

#: ../../first-build.rst:59
msgid "3. Build and install"
msgstr ""

#: ../../first-build.rst:61
#, fuzzy
msgid ""
"Now that the app has a manifest, ``flatpak-builder`` can be used to build"
" and install it::"
msgstr ""
"Nachdem die Anwendung ein Manifest besitzt, kann ``flatpak-builder`` "
"verwendet werden, um sie zu erzeugen. Durchgeführt wird dies, indem ein "
"Zielverzeichnis und die Manifest-Datei angegeben wird::"

#: ../../first-build.rst:66
#, fuzzy
msgid ""
"This command will first build each module that is listed in the manifest,"
" install the contents of ``builddir/files`` in ``/app`` inside the "
"sandbox and finally install the the whole application as a flatpak."
msgstr ""
"Dieses Kommando erzeugt jedes Modul, das im Manifest gelistet ist und "
"installiert es, innerhalb des ``build-dir``-Verzeichnisses, in das "
"``/app``-Unterverzeichnis."

#: ../../first-build.rst:71
#, fuzzy
msgid "4. Run the application"
msgstr "4. Erzeugen der Anwendung"

#: ../../first-build.rst:73
#, fuzzy
msgid "To run the application::"
msgstr "4. Erzeugen der Anwendung"

#: ../../first-build.rst:77
msgid ""
"If you see ``Hello world, from a sandbox`` on the terminal then "
"congratulations, you've made an app!"
msgstr ""

#: ../../first-build.rst:81
#, fuzzy
msgid "5. Share the application"
msgstr "4. Erzeugen der Anwendung"

#: ../../first-build.rst:83
msgid ""
"If you want to share the application you can create a single-file bundle."
" See :doc:`single-file-bundles` for more details on it."
msgstr ""

#: ../../first-build.rst:90
msgid ""
"Now you can send the ``hello.flatpak`` file to someone and if they have "
"the Flathub repository set up and a working network connection to install"
" the runtime, they can install it with::"
msgstr ""

#: ../../first-build.rst:98
msgid "To uninstall, run ``flatpak remove org.flatpak.Hello``"
msgstr ""

#~ msgid ""
#~ "In order for your application to "
#~ "show up in application stores while "
#~ "testing with a local repository, you "
#~ "might have to run ``flatpak build-"
#~ "update-repo repo``. For more information"
#~ " how to publish to application stores"
#~ " see `Appdata files "
#~ "<http://docs.flatpak.org/en/latest/freedesktop-quick-"
#~ "reference.html#appdata-files>`_."
#~ msgstr ""

#~ msgid ""
#~ "In order to complete this tutorial, "
#~ "you should have followed the `setup "
#~ "guide on flatpak.org <https://flatpak.org/setup/>`_."
#~ " You also need to have installed "
#~ "``flatpak-builder``, which is usually "
#~ "available from the same repository as"
#~ " the ``flatpak`` package (e.g. use "
#~ "``apt`` or ``dnf``). You can also "
#~ "install it as a flatpak with "
#~ "``flatpak install flathub org.flatpak.Builder``."
#~ msgstr ""
#~ "Um dieses Tutorial durchführen zu "
#~ "können, sollte das `Setup auf "
#~ "flatpak.org <http://flatpak.org/setup/>`_. durchgeführt"
#~ " worden sein. Ebenso muss das Paket"
#~ " ``flatpak-builder`` installiert sein, "
#~ "welches sich für gewöhnlich im gleichen"
#~ " Repository wie das ``flatpak``-Paket "
#~ "befindet."

#~ msgid "2. Create the app"
#~ msgstr "2. Erstellen der App"

#~ msgid ""
#~ "The app that is going to be "
#~ "created for this tutorial is a "
#~ "simple script. To create it, copy "
#~ "the following::"
#~ msgstr ""
#~ "Die Anwendung, die für dieses Tutorial"
#~ " erstellt wird, ist ein einfaches "
#~ "Skript. Um sie zu erstellen, kopiert "
#~ "man Folgendes::"

#~ msgid ""
#~ "Now save the file alongside ``hello.sh``"
#~ " and call it ``org.flatpak.Hello.yml``."
#~ msgstr ""
#~ "Die Datei wird nun neben ``hello.sh``"
#~ " gespeichert und ``org.flatpak.Hello.json`` "
#~ "genannt."

#~ msgid ""
#~ "In a more complex application, the "
#~ "manifest would list multiple modules. "
#~ "The last one would typically be "
#~ "the application itself, and the earlier"
#~ " ones would be dependencies that are"
#~ " bundled with the app because they"
#~ " are not part of the runtime."
#~ msgstr ""
#~ "In einer komplexeren Anwendung würde das"
#~ " Manifest verschiedene Module auflisten. "
#~ "Das letzte Modul würde standardmäßig die"
#~ " Anwendung selbst sein und die davor"
#~ " aufgelisteten Module würden Abhängigkeiten "
#~ "sein, die mit der Anwendung gebündelt"
#~ " werden, da sie kein Bestandteil der"
#~ " Laufzeitumgebung sind."

#~ msgid "5. Test the build"
#~ msgstr "5. Testen des Builds"

#~ msgid "To verify that the build was successful, run the following::"
#~ msgstr ""
#~ "Um zu testen, ob der Build "
#~ "erfolgreich war, verwendet man dieses "
#~ "Kommando::"

#~ msgid ""
#~ "This second time we passed in "
#~ "``--force-clean``, which means that the "
#~ "previously created ``build-dir`` directory "
#~ "was deleted before the new build "
#~ "was started."
#~ msgstr ""
#~ "Im zweiten Durchlauf haben wir "
#~ "``--force-clean`` durchgereicht, was bedeutet,"
#~ " dass das zuvor erzeugte ``build-"
#~ "dir``-Verzeichnis gelöscht wurde, bevor der"
#~ " neue Build angestoßen wird."

#~ msgid "Congratulations, you've made an app!"
#~ msgstr "Die erste Anwendung wurde damit erfolgreich erstellt."

#~ msgid "6. Put the app in a repository"
#~ msgstr "6. Die Anwendung in ein Repository legen"

#~ msgid ""
#~ "If you want to share the "
#~ "application you can put it in a"
#~ " repository. This is done by passing"
#~ " the ``--repo`` argument to ``flatpak-"
#~ "builder``::"
#~ msgstr ""
#~ "Bevor die Anwendung installiert und "
#~ "gestartet werden kann, muss sie zuerst"
#~ " in ein Repository gelegt werden. "
#~ "Dies wird durchgeführt, indem das "
#~ "``--repo``-Argument an ``flatpak-"
#~ "builder``weitergereicht wird::"

#~ msgid ""
#~ "This does the build again, and at"
#~ " the end exports the result to "
#~ "a local directory called ``repo``. Note"
#~ " that ``flatpak-builder`` keeps a "
#~ "cache of previous builds in the "
#~ "``.flatpak-builder`` subdirectory, so doing "
#~ "a second build like this is very"
#~ " fast."
#~ msgstr ""
#~ "Dies stößt den Build-Prozess erneut "
#~ "an und exportiert das Resultat am "
#~ "Ende in ein lokales Verzeichnis namens"
#~ " ``repo``. Zu beachten ist, dass "
#~ "``flatpak-builder`` einen Cache behält von"
#~ " vorherigen Builds im ``flatpak-"
#~ "builder``-Unterverzeichnis, somit kann sehr "
#~ "schnell ein zweiter Build, wie dieser,"
#~ " erzeugt werden."

#~ msgid ""
#~ "In order for your application to "
#~ "show up in application stores while "
#~ "testing with a local repository, you "
#~ "might have to run ``flatpak build-"
#~ "update-repo repo``. For more information"
#~ " how to publish to application stores"
#~ " see `Appdata files "
#~ "<https://docs.flatpak.org/en/latest/freedesktop-quick-"
#~ "reference.html#appdata-files>`_."
#~ msgstr ""

#~ msgid "7. Install the app"
#~ msgstr "7. Installieren der Anwendung"

#~ msgid ""
#~ "Now we're ready to add the "
#~ "repository that was just created and "
#~ "install the app. This is done with"
#~ " two commands::"
#~ msgstr ""
#~ "Nun ist alles so weit vorbereitet, "
#~ "um das Repository, das eben erstellt "
#~ "wurde, hinzuzufügen und die Anwendung zu"
#~ " installieren. Dies wird mit zwei "
#~ "Kommandos durchgeführt::"

#~ msgid ""
#~ "The first command adds the repository"
#~ " that was created in the previous "
#~ "step. The second command installs the"
#~ " app from the repository."
#~ msgstr ""
#~ "Das erste Kommando fügt das Repository"
#~ " hinzu, das im vorherigen Schritt "
#~ "erzeugt wurde. Das zweite Kommando "
#~ "installiert die Anwendung vom Repository."

#~ msgid ""
#~ "Both these commands use the ``--user``"
#~ " argument, which means that the "
#~ "repository and the app are added "
#~ "per-user rather than system-wide. "
#~ "This is useful for testing."
#~ msgstr ""
#~ "Beide Kommandos verwenden das "
#~ "``--user``-Argument, damit wird das Repository"
#~ " für den jeweiligen Benutzer hinzugefügt"
#~ " – und nicht systemweit. Dies ist "
#~ "sinnvoll für Testläufe."

#~ msgid ""
#~ "Note that the repository was added "
#~ "with ``--no-gpg-verify``, since a "
#~ "GPG key wasn't specified when the "
#~ "app was built. This is fine for"
#~ " testing, but for official repositories "
#~ "you should sign them with a "
#~ "private GPG key."
#~ msgstr ""
#~ "Hierbei ist zu beachten, dass das "
#~ "Repository mit ``--no-gpg-verify`` "
#~ "hinzugefügt wurde, da kein GPG-Schlüssel"
#~ " spezifiziert wurde, als die Anwendung "
#~ "erzeugt wurde. Dies ist gut zum "
#~ "Testen, aber für offizielle Repositorys "
#~ "sollten diese mit einem privaten GPG-"
#~ "Schlüssel signiert sein."

#~ msgid "8. Run the app"
#~ msgstr "8. Starten der Anwendung"

#~ msgid ""
#~ "All that's left is to try the "
#~ "app. This can be done with the "
#~ "following command::"
#~ msgstr ""
#~ "Zum Abschluss kann die Anwendung "
#~ "getestet werden. Um dies durchzuführen "
#~ "wird folgendes Kommando eingegeben::"

#~ msgid "This runs the app, so that it prints 'Hello world, from a sandbox'."
#~ msgstr ""
#~ "Das startet die Anwendung und gibt "
#~ "den Text 'Hello world, from a "
#~ "sandbox' aus."

