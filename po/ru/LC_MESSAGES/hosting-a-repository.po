# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# Dmitry <dmitrydmitry761@gmail.com>, 2021.
# Dmitry <dmitrydmitry761@gmail.com>, 2022.
msgid ""
msgstr ""
"Project-Id-Version:  Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-13 09:30+0530\n"
"PO-Revision-Date: 2022-12-31 03:25+0700\n"
"Last-Translator: Dmitry <dmitrydmitry761@gmail.com>\n"
"Language: ru\n"
"Language-Team: \n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<12 || n%100>14) ? 1 : 2);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../hosting-a-repository.rst:2
msgid "Hosting a repository"
msgstr "Размещение репозитория"

#: ../../hosting-a-repository.rst:6
msgid ""
"Flathub uses flat-manager to host its Flatpak repository. See "
"https://github.com/flatpak/flat-manager"
msgstr ""
"Flathub использует flat-manager для размещения своего репозитория "
"Flatpak. См.https://github.com/flatpak/flat-manager"

#: ../../hosting-a-repository.rst:9
msgid ""
"The section on :doc:`flatpak-builder` describes how to generate "
"repositories. The resulting repository can be hosted on a web server for "
"consumption by users."
msgstr ""
"В разделе :doc:`flatpak-builder` описывается, как создавать репозитории. "
"Полученный репозиторий может быть размещен на веб-сервере для "
"использования пользователями."

#: ../../hosting-a-repository.rst:14
msgid "Important details"
msgstr "Важные детали"

#: ../../hosting-a-repository.rst:16
msgid ""
"Flatpak repositories use archive-z2, meaning that they contain a single "
"file for each file in the application. This means that pull operations "
"involve a lot of HTTP requests. Since new requests can be slow, it is "
"important to enable HTTP keep-alive on the web server that is hosting "
"your repository."
msgstr ""
"В репозиториях Flatpak используется archive-z2, что означает, что они "
"содержат один файл для каждого файла в приложении. Это означает, что "
"операции pull включают множество HTTP-запросов. Поскольку новые запросы "
"могут выполняться медленно, важно включить поддержку HTTP на веб-сервере,"
" на котором размещен ваш репозиторий."

#: ../../hosting-a-repository.rst:21
msgid ""
"Flatpak supports something called static deltas. These are single files "
"that contain all the data needed to go between two revisions (or from "
"nothing to a revision). Creating such deltas will take up more space on "
"the server, but will make downloads much faster. This can be done with "
"the ``flatpak build-update-repo --generate-static-deltas`` option."
msgstr ""
"Flatpak поддерживает так называемые статические дельты. Это отдельные "
"файлы, содержащие все данные, необходимые для перехода между двумя "
"редакциями (или от нуля до ревизии). Создание таких дельт займет больше "
"места на сервере, но сделает загрузки намного быстрее. Это можно сделать "
"с помощью опции ``flatpak build-update-repo --generate-static-deltas``."

#: ../../hosting-a-repository.rst:28
msgid ".flatpakrepo files"
msgstr "Файлы .flatpakrepo"

#: ../../hosting-a-repository.rst:30
msgid ""
"``.flatpakrepo`` files are a convenient way to let users add a "
"repository. These are simple description files which contain information "
"about the repository. For example, the Flathub repo file looks like::"
msgstr ""
"Файлы ``.flatpakrepo`` - удобный способ позволить пользователям добавить "
"репозиторий. Это простые файлы описания, которые содержат информацию о "
"репозитории. Например, файл репозитория Flathub выглядит так::"

#: ../../hosting-a-repository.rst:43
msgid ""
"Here you can see that the repo file contains descriptive metadata, such "
"as the repository name, description, icon and website. The file also "
"contains information that is needed to add the repository, including a "
"download URL and the repository's GPG key."
msgstr ""
"Здесь вы можете видеть, что файл репо содержит описательные метаданные, "
"такие как имя репозитория, описание, значок и веб-сайт. Файл также "
"содержит информацию, необходимую для добавления репозитория, включая "
"URL-адрес загрузки и ключ GPG репозитория."

#: ../../hosting-a-repository.rst:48
msgid ""
"``.flatpakrepo`` files can be used to add a repository from the command "
"line. For example, the command to add Flathub using its repo file is::"
msgstr ""
"Файлы ``.flatpakrepo`` можно использовать для добавления репозитория из "
"командной строки. Например, команда для добавления Flathub с "
"использованием его файла repo::"

#: ../../hosting-a-repository.rst:53
msgid ""
"The command line isn't the only way to add a repository using a "
"``.flatpakrepo`` file - on desktops that support Flatpak, it is just a "
"matter of clicking the repository file or a download link that points to "
"it."
msgstr ""
"Командная строка - не единственный способ добавить репозиторий с помощью "
"файла ``.flatpakrepo`` - на настольных компьютерах, поддерживающих "
"Flatpak, достаточно щелкнуть по файлу репозитория или по ссылке для "
"загрузки, указывающей на него."

#: ../../hosting-a-repository.rst:59
msgid ""
"``.flatpakrepo`` files should include the base64-encoded version of the "
"GPG key that was used to sign the repository. This can be obtained with "
"the following command::"
msgstr ""
"Файлы ``.flatpakrepo`` должны включать в себя версию ключа GPG в "
"кодировке base64, который использовался для подписи репозитория. Это "
"можно получить с помощью следующей команды::"

#: ../../hosting-a-repository.rst:66
#, fuzzy
msgid "Hosting a repository on Gitlab/Github pages"
msgstr "Размещение репозитория"

#: ../../hosting-a-repository.rst:68
msgid ""
"A Flatpak repository can be easily hosted through Gitlab or Github pages "
"and distributed to users."
msgstr ""

#: ../../hosting-a-repository.rst:72
msgid ""
"Github or Gitlab may have pipeline quotas, storage and bandwidth limits. "
"Please consult their documentation on this."
msgstr ""

#: ../../hosting-a-repository.rst:76
msgid "On Gitlab"
msgstr ""

#: ../../hosting-a-repository.rst:78
msgid "The instructions will use Gitlab.com."
msgstr ""

#: ../../hosting-a-repository.rst:80
msgid "Create a new blank repository on Gitlab"
msgstr ""

#: ../../hosting-a-repository.rst:82
msgid "Clone the repository locally"
msgstr ""

#: ../../hosting-a-repository.rst:88
msgid "Create a ``.gitlab-ci.yml`` with the following contents."
msgstr ""

#: ../../hosting-a-repository.rst:91
msgid "A worflow that builds for aarch64 and x86_64 is provided below."
msgstr ""

#: ../../hosting-a-repository.rst:209
msgid ""
"`Create <https://www.gnupg.org/gph/en/manual/c14.html>`_ a new GPG key "
"locally, to sign the repository."
msgstr ""

#: ../../hosting-a-repository.rst:212
msgid ""
"Go to ``https://gitlab.com/-/profile/personal_access_tokens`` and create "
"a token for ``$CI_GIT_TOKEN``. Note that the token is valid for a maximum"
" of one year and you should renew it before it expires."
msgstr ""

#: ../../hosting-a-repository.rst:216
msgid ""
"Go to ``https://gitlab.com/your_user_name/repo_name/-/settings/ci_cd``. "
"Expand `General` and disable public pipeline. Click Save. Expand "
"`variables`. Add the following `variables "
"<https://docs.gitlab.com/ci/variables/#define-a-cicd-variable-in-the-"
"gitlab-ciyml-file>`_ necessary for the pipeline to run:"
msgstr ""

#: ../../hosting-a-repository.rst:226
msgid "Type"
msgstr ""

#: ../../hosting-a-repository.rst:227
msgid "Key"
msgstr ""

#: ../../hosting-a-repository.rst:228
msgid "Value"
msgstr ""

#: ../../hosting-a-repository.rst:229
msgid "Protected"
msgstr ""

#: ../../hosting-a-repository.rst:230
msgid "Masked"
msgstr ""

#: ../../hosting-a-repository.rst:231 ../../hosting-a-repository.rst:236
#: ../../hosting-a-repository.rst:251
msgid "Variable"
msgstr ""

#: ../../hosting-a-repository.rst:232
msgid "GPG_KEY_GREP"
msgstr ""

#: ../../hosting-a-repository.rst:233
msgid "Keygrip of GPG key"
msgstr ""

#: ../../hosting-a-repository.rst:234 ../../hosting-a-repository.rst:239
#: ../../hosting-a-repository.rst:244 ../../hosting-a-repository.rst:249
#: ../../hosting-a-repository.rst:254
msgid "Yes"
msgstr ""

#: ../../hosting-a-repository.rst:235 ../../hosting-a-repository.rst:240
#: ../../hosting-a-repository.rst:245 ../../hosting-a-repository.rst:250
#: ../../hosting-a-repository.rst:255
msgid "Optional"
msgstr ""

#: ../../hosting-a-repository.rst:237
msgid "GPG_KEY_ID"
msgstr ""

#: ../../hosting-a-repository.rst:238
msgid "Keyid of GPG key"
msgstr ""

#: ../../hosting-a-repository.rst:241 ../../hosting-a-repository.rst:246
msgid "File"
msgstr ""

#: ../../hosting-a-repository.rst:242
msgid "GPG_PASSPHRASE"
msgstr ""

#: ../../hosting-a-repository.rst:243
msgid "Passphrase of GPG Key"
msgstr ""

#: ../../hosting-a-repository.rst:247
msgid "GPG_PRIVATE_KEY"
msgstr ""

#: ../../hosting-a-repository.rst:248
msgid "ASCII armoured private key"
msgstr ""

#: ../../hosting-a-repository.rst:252
msgid "CI_GIT_TOKEN"
msgstr ""

#: ../../hosting-a-repository.rst:253
msgid "Token"
msgstr ""

#: ../../hosting-a-repository.rst:257
msgid ""
"To get the keygrip of the GPG key generated in step 4, run the following "
"in your terminal and look at the ``Keygrip`` section:"
msgstr ""

#: ../../hosting-a-repository.rst:264
msgid ""
"To find the keyid of the GPG key run the following in the terminal. The "
"keyid should be in the first line starting with ``sec`` and "
"``algorithm/id``. The ``id`` part is the required keyid."
msgstr ""

#: ../../hosting-a-repository.rst:272
msgid ""
"The following will generate an ASCII armoured private key. Then paste the"
" contents of that file in the CI variable settings."
msgstr ""

#: ../../hosting-a-repository.rst:279
msgid ""
"Create a ``app_name.flatpakref`` in the root of the git repo with the "
"following contents."
msgstr ""

#: ../../hosting-a-repository.rst:296
msgid ""
"You can find the Gitlab page in "
"``https://gitlab.com/your_user_name/repo_name/pages``. Disable `Use "
"unique domain` there and hit save. To generate the base64 encoded "
"``GPGKey``, run the following and paste the string:"
msgstr ""

#: ../../hosting-a-repository.rst:306
msgid ""
"The root of the repository should contain the following files: ``.gitlab-"
"ci.yml``, ``app_name.flatpakref``, the flatpak manifest "
"``tld.vendor.app_name.yaml`` and any other files/folders referenced in "
"the manifest. ``git add`` these files, ``git commit`` and ``git push``."
msgstr ""

#: ../../hosting-a-repository.rst:312
msgid ""
"If everything was set up correctly, the push will trigger the pipeline to"
" build and deploy your application with flatpak."
msgstr ""

#: ../../hosting-a-repository.rst:315
msgid "To install the build, you can run:"
msgstr ""

#: ../../hosting-a-repository.rst:321
msgid ""
"This will set up a flatpak remote userwide, install the dependencies and "
"the application. Updates will be fetched when running ``flatpak update`` "
"if they are available."
msgstr ""

#: ../../hosting-a-repository.rst:325
msgid ""
"You can set up a `pipeline schedule "
"<https://docs.gitlab.com/ci/pipelines/schedules/>`_, optionally to "
"automatically check for updates using `flatpak-x-checker "
"<https://github.com/flathub-infra/flatpak-external-data-checker>`_ and "
"send PRs to the repo."
msgstr ""

#: ../../hosting-a-repository.rst:332
msgid "Multi-architecture workflow"
msgstr ""

#: ../../hosting-a-repository.rst:334
msgid ""
"This uses Gitlab.com's `hosted aarch64 runners "
"<https://docs.gitlab.com/ci/runners/hosted_runners/linux/#machine-types-"
"available-for-linux---arm64>`_ for building on aarch64."
msgstr ""

#: ../../hosting-a-repository.rst:441
msgid "Credits"
msgstr ""

#: ../../hosting-a-repository.rst:442
msgid ""
"The CI template is based on the `work <https://gitlab.com/accessable-net"
"/gitlab-ci-templates>`_ of Flatpak community member `proletarius101 "
"<https://gitlab.com/proletarius101>`_."
msgstr ""

#~ msgid ""
#~ "Go to "
#~ "``https://gitlab.com/your_user_name/repo_name/-/settings/ci_cd``. "
#~ "Expand `General` and disable public "
#~ "pipeline. Click Save. Expand `variables`. "
#~ "Add the following `variables "
#~ "<https://docs.gitlab.com/ee/ci/variables/#define-a-cicd-"
#~ "variable-in-the-gitlab-ciyml-file>`_ "
#~ "necessary for the pipeline to run:"
#~ msgstr ""

#~ msgid ""
#~ "You can set up a `pipeline "
#~ "schedule "
#~ "<https://docs.gitlab.com/ee/ci/pipelines/schedules.html>`_, "
#~ "optionally to automatically check for "
#~ "updates using `flatpak-x-checker <https://github.com"
#~ "/flathub-infra/flatpak-external-data-checker>`_"
#~ " and send PRs to the repo."
#~ msgstr ""

#~ msgid ""
#~ "This uses Gitlab.com's `hosted aarch64 "
#~ "runners "
#~ "<https://docs.gitlab.com/ee/ci/runners/hosted_runners/linux.html"
#~ "#machine-types-available-for-linux---"
#~ "arm64>`_ for building on aarch64."
#~ msgstr ""

