# Documentation Flatpak
# Copyright (C) 2017, Flatpak Team
# This file is distributed under the same license as the Flatpak package.
# Baptiste Mille-Mathias <baptiste.millemathias@gmail.com>, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-06-30 18:01+0200\n"
"PO-Revision-Date: 2018-03-06 16:46+0900\n"
"Last-Translator: Baptiste Mille-Mathias <baptiste.millemathias@gmail.com>\n"
"Language-Team: ohpato <ohpato@hanmail.net>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko_KR\n"
"X-Generator: Poedit 2.0.6\n"

#: ../../getting-setup.rst:2
msgid "Getting Setup"
msgstr "설정 하기"

#: ../../getting-setup.rst:4
msgid "Getting setup to build Flatpaks is quick and easy. First, it is necessary to have the ``flatpak`` and ``flatpak-builder`` packages installed on your system. These are available for most distributions, and the Flatpak website provides `details on how to get them <http://flatpak.org/getting.html>`_."
msgstr "플랫팩을 빌드하기 위한 준비과정은 쉽고 빠르게 완료할 수 있다. 우선 ``flatpak`` 과 ``flatpak-builder`` 패키지를 시스템에 설치한다. 대부분의 배포판에서 지원하고 있으며, 플랫팩 웹사이트의 `다운로드 및 설치방법 <http://flatpak.org/getting.html>`_ 를 참조하여 설치할 수도 있다."

#: ../../getting-setup.rst:6
msgid "Once flatpak has been installed, it is necessary to pick a runtime and install it, along with the matching SDK."
msgstr "플랫팩이 설치된 후에는 런타임을 선택한 후, 런타임 및 런타임과 짝을 이루는 SDK를 설치한다."

#: ../../getting-setup.rst:9
msgid "Installing an SDK"
msgstr "SDK 설치"

#: ../../getting-setup.rst:11
msgid "An SDK is a special type of runtime that is used to build applications. Typically, an SDK is paired with a runtime that will be used by the application at runtime. For example the GNOME 3.22 SDK is used to build applications that use the GNOME 3.22 runtime."
msgstr "SDK는 응용프로그램을 빌드할 때 사용하는 런타임이다. 일반적으로 SDK에는 이와 짝을 이루는 (실행시간에 응용프로그램이 사용하는) 런타임이 있다. 예를 들면, GNOME 3.22 SDK 는 GNOME 3.22 런타임을 사용해 실행되는 응용프로그램을 빌드할 때 사용된다."

#: ../../getting-setup.rst:13
msgid "The Flatpak website provides a `list of the available runtimes <http://flatpak.org/runtimes.html>`_. Once you have decided which one to use, getting setup is just a matter of installing it and its SDK."
msgstr "플랫팩 웹사이트는 `설치 가능한 런타임 목록 <http://flatpak.org/runtimes.html>`_ 을 제공한다. 어떤 런타임을 사용할 지 결정하기만 하면 SDK와 함께 설치하는 것은 아주 간단하다."

#: ../../getting-setup.rst:15
msgid "The examples in the rest of the Flatpak documentation use the GNOME 3.22 runtime and SDK. If you haven't installed these already, download the repository GPG key and then add the repository that contains the runtime and SDK::"
msgstr "이후의 예제들은 GNOME 3.22 런타임과 SDK를 사용한다. 아직 설치전일 경우, GPG 키를 다운로드하고 해당 런타임과 SDK를 내려받을 수 있는 저장소를 목록에 추가할 수 있다::"

#: ../../getting-setup.rst:19
msgid "You can now download and install the runtime and SDK::"
msgstr "원격 저장소 추가가 끝나면 런타임과 SDK를 내려받아 설치한다::"

#: ../../getting-setup.rst:23
msgid "This same procedure can be used to install any other runtime and SDK."
msgstr "다른 런타임과 SDK를 설치할 때에도 동일한 과정을 반복한다."

#: ../../getting-setup.rst:26
msgid "Taking a look around"
msgstr "둘러보기"

#: ../../getting-setup.rst:28
msgid "If this is the first time you've used Flatpak, it is a good time to try installing an application and having a look 'under the hood'. To do this, you need to add a repository that contains applications. We can do this using the gnome-apps repository to install gedit::"
msgstr "플랫팩을 처음 사용한다면, 현재 사용가능한 플랫팩 응용프로그램을 둘러보고 설치해보는 것도 좋다. 이를 위해, 우선 응용프로그램들을 내려받을 수 있는 저장소를 추가해야 한다. `gedit`을 시험삼아 설치해 보기 위해 다음과 같이 `gnome-app` 저장소를 추가한다."

#: ../../getting-setup.rst:33
msgid "You can now use the following command to get a shell in the 'devel sandbox'::"
msgstr "아래와 같이 입력하면 `devel sandbox` 내의 명령 쉘을 얻을 수 있다::"

#: ../../getting-setup.rst:37
msgid "This gives you an environment which has the application bundle mounted in ``/app``, and the SDK it was built against mounted in ``/usr``. You can explore these two directories to see what a typical flatpak looks like, as well as what is included in the SDK."
msgstr "쉘로 접근할 수 있는 환경은, `gedit`이 실행되는 샌드박스 환경으로서, 응용프로그램 번들은 ``/app`` 에 마운트되고, SDK는 ``/usr`` 에 마운트 되어 있다. 이들 디렉토리를 방문하여 전형적인 플랫팩의 생김새를 둘러보고, SDK가 무엇을 포함하고 있는지 살펴볼 수 있다."
