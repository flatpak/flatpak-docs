# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, 2018, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
# TingPing <tingping@tingping.se>, 2018. #zanata
msgid ""
msgstr ""
"Project-Id-Version:  Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-01 08:05+0530\n"
"PO-Revision-Date: 2018-05-20 10:37-0400\n"
"Last-Translator: Copied by Zanata <copied-by-zanata@zanata.org>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../basic-concepts.rst:2
msgid "Basic concepts"
msgstr ""

#: ../../basic-concepts.rst:4
msgid ""
"Flatpak can be understood through a few key concepts. Familiarizing "
"yourself with these will be useful for learning to use Flatpak from the "
"command line or building applications with it."
msgstr ""

#: ../../basic-concepts.rst:11
msgid "Runtimes"
msgstr ""

#: ../../basic-concepts.rst:13
msgid ""
"Runtimes provide the basic dependencies used by applications. Each "
"application must be built against a runtime, and this runtime must be "
"installed on the host system for the application to run. (Flatpak can "
"automatically install the required runtime for an application.) Multiple "
"runtimes and different versions of the same runtime can be installed "
"alongside each other."
msgstr ""

#: ../../basic-concepts.rst:20
msgid ""
"Runtimes are distribution agnostic and do not depend on a particular "
"distribution version. This means that they provide a stable, cross-"
"distribution base for applications and allow applications to work "
"irrespective of operating system updates."
msgstr ""

#: ../../basic-concepts.rst:26
msgid "Bundled libraries"
msgstr ""

#: ../../basic-concepts.rst:28
msgid ""
"If an application requires dependencies that aren't in its runtime, they "
"can be bundled with the application. This gives application developers "
"flexibility in their choice of dependencies, allowing them to use:"
msgstr ""

#: ../../basic-concepts.rst:32
msgid "libraries that aren't available in a runtime"
msgstr ""

#: ../../basic-concepts.rst:33
msgid "different versions of libraries from those available in a runtime"
msgstr ""

#: ../../basic-concepts.rst:34
msgid "patched versions of libraries"
msgstr ""

#: ../../basic-concepts.rst:37
msgid "Sandboxes"
msgstr ""

#: ../../basic-concepts.rst:39
msgid ""
"With Flatpak, each application is built and run in an isolated "
"environment called the 'sandbox'. Each sandbox contains the application "
"and its runtime. By default, the application can only access the contents"
" of its sandbox. Access to user files, network, graphics sockets, "
"subsystems on the bus, and devices have to be explicitly granted. Access "
"to other resources, such as other processes, is deliberately not "
"possible."
msgstr ""

#: ../../basic-concepts.rst:46
msgid ""
"By necessity, some resources inside the sandbox need to be exported "
"outside to be used by the host system. These are known as 'exports' and "
"include resources such as the application's desktop file and its icon."
msgstr ""

#: ../../basic-concepts.rst:52
msgid "Portals"
msgstr ""

#: ../../basic-concepts.rst:54
msgid ""
"Portals are a mechanism through which applications can interact with the "
"host environment from within the sandbox. They enable access to data, "
"files and services without requiring additional static sandbox "
"permissions."
msgstr ""

#: ../../basic-concepts.rst:58
msgid ""
"Examples of capabilities that can be accessed through portals include "
"opening files through a file chooser dialog or printing. Interface "
"toolkits can offer transparent support for portals, ensuring secure and "
"out-of-the-box access to resources outside the sandbox."
msgstr ""

#: ../../basic-concepts.rst:63
msgid "More information about portals can be found in :doc:`sandbox-permissions`."
msgstr ""

#: ../../basic-concepts.rst:66
msgid "Repositories"
msgstr ""

#: ../../basic-concepts.rst:68
msgid ""
"Flatpak applications and runtimes are typically stored and published "
"using repositories, which behave very similarly to Git repositories: a "
"Flatpak repository can contain a single object or multiple objects, and "
"each object is versioned, allowing for upgrades and even downgrades."
msgstr ""

#: ../../basic-concepts.rst:73
msgid ""
"Each system using Flatpak can be configured to access any number of "
"remote repositories. Once a system has been configured to access a "
"'remote', the remote repository's content can be inspected, searched, and"
" used as a source of applications and runtimes."
msgstr ""

#: ../../basic-concepts.rst:78
msgid ""
"When an update is performed, new versions of installed applications and "
"runtimes are downloaded from the relevant remotes. Like Git, only the "
"parts that have changed between versions are downloaded, making the "
"process very efficient."
msgstr ""

#~ msgid "libraries that aren't available in a distribution or runtime"
#~ msgstr ""

#~ msgid ""
#~ "different versions of libraries from the"
#~ " ones that are in a distribution "
#~ "or runtime"
#~ msgstr ""

#~ msgid ""
#~ "Flatpak can be understood through a "
#~ "small number of key concepts. It "
#~ "is useful to be familiar with "
#~ "these before learning about how to "
#~ "use Flatpak from the command line, "
#~ "or using it to build applications."
#~ msgstr ""

#~ msgid ""
#~ "Runtimes provide the basic dependencies "
#~ "that are used by applications. Each "
#~ "application must be built against a "
#~ "runtime, and this runtime must be "
#~ "installed on a host system in "
#~ "order for the application to run "
#~ "(Flatpak can automatically install the "
#~ "runtime required by an application). "
#~ "Multiple different runtimes can be "
#~ "installed at the same time, including"
#~ " different versions of the same "
#~ "runtime."
#~ msgstr ""

#~ msgid ""
#~ "Runtimes are distribution agnostic and "
#~ "do not depend on particular distribution"
#~ " versions. This means that they "
#~ "provide a stable, cross-distribution "
#~ "base for applications, and allow "
#~ "applications to continue to work "
#~ "irrespective of operating system updates."
#~ msgstr ""

#~ msgid ""
#~ "If an application requires any "
#~ "dependencies that aren't in its runtime,"
#~ " they can be bundled as part of"
#~ " the application. This gives application"
#~ " developers flexibility regarding the "
#~ "dependencies that they use, including "
#~ "using:"
#~ msgstr ""

#~ msgid "different versions of libraries from the ones that are in a runtime"
#~ msgstr ""

#~ msgid ""
#~ "With Flatpak, each application is built"
#~ " and run in an isolated environment,"
#~ " which is called the 'sandbox'. Each"
#~ " sandbox contains an application and "
#~ "its runtime. By default, the application"
#~ " can only access the contents of "
#~ "its sandbox. Access to user files, "
#~ "network, graphics sockets, subsystems on "
#~ "the bus and devices have to be "
#~ "explicitly granted. Access to other "
#~ "things, such as other processes, is "
#~ "deliberately not possible."
#~ msgstr ""

#~ msgid ""
#~ "By necessity, some resources that are"
#~ " inside the sandbox need to be "
#~ "exposed outside, to be used by the"
#~ " host system. These are known as "
#~ "'exports', since they are files that "
#~ "are exported out of the sandbox, "
#~ "and include things like the "
#~ "application's ``.desktop`` file and icon."
#~ msgstr ""

#~ msgid ""
#~ "Portals are a mechanism through which"
#~ " applications can interact with the "
#~ "host environment from within a sandbox."
#~ " They give the ability to interact"
#~ " with data, files and services "
#~ "without the need to add sandbox "
#~ "permissions."
#~ msgstr ""

#~ msgid ""
#~ "Examples of capabilities that can be "
#~ "accessed through portals include opening "
#~ "files through a file chooser dialog, "
#~ "or printing. Interface toolkits can "
#~ "implement transparent support for portals, "
#~ "so access to resources outside of "
#~ "the sandbox will work securely and "
#~ "out of the box."
#~ msgstr ""

#~ msgid ""
#~ "Flatpak applications and runtimes are "
#~ "typically stored and published using "
#~ "repositories, which behave very similarly "
#~ "to Git repositories. A Flatpak "
#~ "repository can contain a single object"
#~ " or multiple objects, and each object"
#~ " is versioned, which allows upgrading "
#~ "and even downgrading."
#~ msgstr ""

#~ msgid ""
#~ "Each system which is using Flatpak "
#~ "can be configured to access any "
#~ "number of remote repositories. Once a"
#~ " system has been configured to access"
#~ " a 'remote', the remote repository's "
#~ "content can be inspected and searched,"
#~ " and it can be used as the "
#~ "source of applications and runtimes."
#~ msgstr ""

#~ msgid ""
#~ "When an update is performed, new "
#~ "versions of installed applications and "
#~ "runtimes are downloaded from the "
#~ "relevant remotes. Like with Git, only"
#~ " the difference between versions is "
#~ "downloaded, which makes the process very"
#~ " efficient."
#~ msgstr ""

