# Brazilian Portuguese translation for python
# Copyright (C) 2017, 2018, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# Rafael Fontenelle <rafaelff@gnome.org>, 2019-2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Flatpak \n"
"Report-Msgid-Bugs-To: https://github.com/flatpak/flatpak-docs/issues\n"
"POT-Creation-Date: 2023-01-07 16:26-0600\n"
"PO-Revision-Date: 2023-05-31 14:40-0300\n"
"Last-Translator: Rafael Fontenelle <rafaelff@gnome.org>\n"
"Language: pt_BR\n"
"Language-Team: Brazilian Portuguese\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../python.rst:2
msgid "Python"
msgstr "Python"

#: ../../python.rst:4
msgid ""
"Python applications that use supported build systems like Meson, CMake, "
"or Autotools can be built using the standard method. However, many Python"
" applications use custom install scripts or are expected to be installed "
"through Setuptools and ``pip``."
msgstr ""
"Aplicativos em Python que usam sistemas de compilação suportados, como "
"Meson, CMake ou Autotools, podem ser criados usando o método padrão. No "
"entanto, muitos aplicativos Python usam scripts de instalação "
"personalizados ou espera-se que sejam instalados através do Setuptools e "
"do ``pip``."

#: ../../python.rst:9
msgid ""
"For these cases, ``flatpak-builder`` provides the ``simple`` buildsystem."
" Rather than automating the build process, ``simple`` accepts a ``build-"
"commands`` array of strings, which are executed in sequence."
msgstr ""
"Nesses casos, o ``flatpak-builder`` fornece o sistema de compilação "
"``simple``. Em vez de automatizar o processo de compilação, ``simple`` "
"aceita um conjunto de strings ``build-commands``, que são executados em "
"sequência."

#: ../../python.rst:13
msgid ""
"For example, the following YAML makes building the popular requests "
"module rather straightforward:"
msgstr ""
"Por exemplo, o seguinte YAML simplifica bastante a construção do módulo "
"de solicitações populares:"

#: ../../python.rst:27
msgid ""
"Here, ``build-commands`` is an array containing the commands required to "
"build and install the module. As can be seen, in this case ``pip`` is run"
" to do this. Here, the ``--prefix=/app`` option is important, because "
"otherwise ``pip`` would try to install the module under ``/usr/`` which, "
"because ``/usr/`` is mounted read-only inside the sandbox, would fail."
msgstr ""
"Aqui, ``build-commands`` é um vetor que contém os comandos necessários "
"para compilar e instalar o módulo. Como pode-se ver, neste caso, ``pip`` "
"é executado para fazer isso. Aqui, a opção ``--prefix=/app`` é "
"importante, porque, caso contrário, ``pip`` tentaria instalar o módulo em"
" ``/usr/`` o que, por causa do ``/usr/`` estar montado como somente "
"leitura dentro do sandbox, falharia."

#: ../../python.rst:33
msgid ""
"Note that ``--no-deps`` is only used for the purpose of the example - "
"since the requests module has its own dependencies, the build would fail."
" If multiple dependencies are required, it is better to install them "
"using the method in the next section, instead."
msgstr ""
"Observe que ``--no-deps`` é usado apenas para a finalidade do exemplo – "
"como o módulo requisições tem suas próprias dependências, a compilação "
"falhará. Se várias dependências forem necessárias, é melhor instalá-las "
"usando o método na seção seguinte."

#: ../../python.rst:39
msgid "Building multiple Python dependencies"
msgstr "Compilando várias dependências Python"

#: ../../python.rst:41
msgid ""
"Even though the example above installs, it won't actually work. This is "
"because the requests module has a number of dependencies that haven't "
"been installed:"
msgstr ""
"Mesmo que o exemplo acima seja instalado, ele não funcionará. Isso ocorre"
" porque o módulo requests possui várias dependências que não foram "
"instaladas:"

#: ../../python.rst:44
msgid "certifi"
msgstr "certifi"

#: ../../python.rst:45
msgid "chardet"
msgstr "chardet"

#: ../../python.rst:46
msgid "idna"
msgstr "idna"

#: ../../python.rst:47
msgid "urllib3"
msgstr "urllib3"

#: ../../python.rst:49
msgid ""
"Four dependencies aren't very many, and could be installed using the "
"``simple`` method described above. However, anything more complex than "
"this would quickly become tedious."
msgstr ""
"Quatro dependências não são muitas e podem ser instaladas usando o método"
" ``simple`` descrito acima. No entanto, qualquer coisa mais complexa do "
"que isso rapidamente se tornaria tediosa."

#: ../../python.rst:53
msgid ""
"For these cases, `flatpak-pip-generator <https://github.com/flatpak"
"/flatpak-builder-tools/tree/master/pip>`_ can be used to generate the "
"necessary manifest JSON. This is a Python script that takes a package "
"name and uses ``pip`` to identify its dependencies, along with their "
"tarball URLs and hashes."
msgstr ""
"Nesses casos, `flatpak-pip-generator <https://github.com/flatpak/flatpak-"
"builder-tools/tree/master/pip>`_ pode ser usado para gerar o manifesto "
"JSON necessário. Este é um script Python que pega um nome de pacote e usa"
" ``pip`` para identificar suas dependências, junto com seus URLs e hashes"
" tarball."

#: ../../python.rst:59
msgid "Using ``flatpak-pip-generator`` is as simple as running::"
msgstr "Usar ``flatpak-pip-generator`` é tão simples quanto executar::"

#: ../../python.rst:63
msgid ""
"Or if you have a ``requirements.txt`` file you can generate modules for "
"every listed package::"
msgstr ""
"Ou se você tem um arquivo ``requirements.txt`` você pode gerar módulos "
"para cada pacote listado::"

#: ../../python.rst:68
msgid ""
"This will output a file called ``python3-requests.json``, containing the "
"necessary manifest JSON, which can then be included in your application's"
" manifest file. Even if your manifest uses YAML, you can still include "
"JSON like this::"
msgstr ""
"Isso produzirá um arquivo chamado ``python3-requests.json``, contendo o "
"manifesto JSON necessário, que pode ser incluído no arquivo de manifesto "
"do seu aplicativo. Mesmo que seu manifesto use YAML, você ainda pode "
"incluir JSON assim::"

