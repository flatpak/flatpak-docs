# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2024, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flatpak \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-13 09:30+0530\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../extension.rst:2
msgid "Extensions"
msgstr ""

#: ../../extension.rst:4
msgid ""
"A brief overview of extensions can be found in :doc:`dependencies`. This "
"guide will go in depth on how to write an extension manifest and explain "
"the various properties used."
msgstr ""

#: ../../extension.rst:8
msgid ""
"The first step on writing or loading an extension is to define an "
"extension point or use an existing one. The decision depends on where the"
" extension should be made available."
msgstr ""

#: ../../extension.rst:12
msgid ""
"If for example it is a GTK/QT theme, it's best to define or use an "
"extension point in the runtime, so that it can be made available for "
"every application utilising said runtime."
msgstr ""

#: ../../extension.rst:16
msgid ""
"If it is a specific tool eg. MPV plugins, which are only used by MPV, "
"it's best to define or use an extension point in the application. If the "
"tool is generic enough to be used by multiple unrelated applications, the"
" extension point should be defined in the runtime."
msgstr ""

#: ../../extension.rst:21
msgid ""
"To see what are the available extension points in runtime or "
"applications, please see the corresponding flatpak or build manifest."
msgstr ""

#: ../../extension.rst:25
msgid ""
"``.Debug, .Locale, .Sources`` extensions created by Flatpak builder do "
"not need to be specified manually. These are automaitcally created and "
"loaded if installed."
msgstr ""

#: ../../extension.rst:30
msgid "Extension point"
msgstr ""

#: ../../extension.rst:32
msgid ""
"Now to define an extension point the ``add-extensions`` property can be "
"used in the manifest."
msgstr ""

#: ../../extension.rst:35
msgid "This is a typical example of an application extension point."
msgstr ""

#: ../../extension.rst:56
msgid ""
"The details of these properties are documented in the \"Extension NAME\" "
"section of :doc:`flatpak-command-reference`. Some of it is discussed "
"further below."
msgstr ""

#: ../../extension.rst:60
msgid ""
"``org.flatpak.app.plugin`` is the name of the extension point. Extensions"
" using this extension point must start their ID with the same prefix, for"
" example ``org.flatpak.app.plugin.foo``."
msgstr ""

#: ../../extension.rst:64
msgid ""
"``version`` is the branch to use when looking for the extension. This is "
"useful to have parallel installations of the same extension in case of an"
" API/ABI break. The value here will be the ``branch`` used in the "
"extension manifest."
msgstr ""

#: ../../extension.rst:69
msgid ""
"If not specified it defaults to the ``runtime`` branch, that the "
"extension point belongs to. So in the above example it is ``45``."
msgstr ""

#: ../../extension.rst:73
msgid ""
"``versions`` is same as ``version`` but can be used for specifying "
"multiple versions. For example, if an extension is published in the "
"``beta`` branch and the application is published in the ``stable`` "
"branch, to mount the extension in the application, the extension point in"
" the application needs to have ``versions: 'stable;beta'``."
msgstr ""

#: ../../extension.rst:79
msgid ""
"``directory`` is the path relative to prefix where everything is mounted "
"by flatpak. For a runtime this will be relative to ``/usr`` and for an "
"application it will be relative to ``/app``. This supports a single "
"value."
msgstr ""

#: ../../extension.rst:84
msgid ""
"``add-ld-path`` adds a path relative to the extension prefix "
"``/app/extension_directory/foo/lib``, so that a library residing there "
"can be loaded. This supports a single value. If the ``$LD_LIBRARY_PATH`` "
"environment variable exists, the path here is appended to it, otherwise "
"it is put in a ld config file in ``/run/flatpak/ld.so.conf.d``."
msgstr ""

#: ../../extension.rst:90
msgid ""
"``merge-dirs: plug-ins;help`` will merge the contents of these "
"directories from multiple extensions using the same extension point. For "
"example, if ``/app/extension_directory/foo/plug-ins`` and "
"``/app/extension_directory/bar/plug-ins`` exist, they will be merged and "
"made available at ``/app/extension_directory/plug-ins``. Similarly for "
"``help``."
msgstr ""

#: ../../extension.rst:97
msgid ""
"``subdirectories: true`` allows to have multiple extensions under the "
"same ``directory``. So two extensions like ``org.flatpak.app.plugin.foo``"
" and ``org.flatpak.app.plugin.bar`` will be mounted at "
"``/app/extension_directory/foo`` and ``/app/extension_directory/bar``."
msgstr ""

#: ../../extension.rst:103
msgid ""
"``no-autodownload: true`` will prevent installing all extensions under "
"this extension point. This is the default."
msgstr ""

#: ../../extension.rst:106
msgid ""
"``autodelete: true`` will remove all extensions under this extension "
"point when the application is removed."
msgstr ""

#: ../../extension.rst:109
msgid ""
"``.Debug`` and ``.Locale`` extensions are created with ``autodelete: "
"true`` by default."
msgstr ""

#: ../../extension.rst:112
#, python-brace-format
msgid ""
"``mkdir -p ${FLATPAK_DEST}/extension_directory`` runs during the cleanup "
"phase. It is used to initialise an empty directory for the extension to "
"be loaded. This can also be done using ``post-install`` or ``build-"
"commands`` in a module. The directory has to end up in the final flatpak."
" If it is missing, there will be an error while running the application."
msgstr ""

#: ../../extension.rst:118
msgid "There is no extension property to extend the ``PATH``."
msgstr ""

#: ../../extension.rst:122
msgid ""
"If the extension point is defined in a base runtime or SDK manifest "
"``add-extensions`` will make the extension point land in both ``.Sdk`` "
"and ``.Platform``. If the extension point needs to be in only the child "
"``.Sdk`` but not in the child ``.Platform`` ``inherit-sdk-extensions`` "
"should be used which is discussed below."
msgstr ""

#: ../../extension.rst:128
msgid ""
"There are other properties like ``download-if``, ``enable-if``, "
"``autoprune-unless`` etc. These are conditionals which must be ``true`` "
"for the action to happen. These are typically not used in application "
"extension points."
msgstr ""

#: ../../extension.rst:133
msgid ""
"An example of an extension point defined in runtime is the GL extension "
"point used in `Freedesktop SDK <https://gitlab.com/freedesktop-sdk"
"/freedesktop-sdk/-/blob/1a8039407f8573725b16eab8779f2b0e1cd01629/elements"
"/flatpak-images/platform.bst>`_ Freedesktop SDK uses `buildstream "
"<https://buildstream.build/index.html>`_, so the `format "
"<https://docs.buildstream.build/master/format_project.html>`_ is "
"different from the usual ``json`` or ``yaml`` format used by Flatpak "
"manifests."
msgstr ""

#: ../../extension.rst:156
msgid ""
"Most of this is already discussed above. Variables starting with ``%`` "
"are private to the Freedesktop SDK. The version ``1.4`` is only used for "
"the proprietary NVIDIA drivers and is static since they have no API/ABI "
"guarantee."
msgstr ""

#: ../../extension.rst:161
msgid ""
"``active-gl-driver`` is a flatpak conditional that is true if the name of"
" the active GL driver matches the extension point basename. The value can"
" be checked with ``flatpak --gl-drivers`` where ``host`` and ``default`` "
"are always inserted. The command also looks at the ``FLATPAK_GL_DRIVERS``"
" environment variable and ``/sys/module/nvidia/version`` for nvidia "
"kernel module version."
msgstr ""

#: ../../extension.rst:168
msgid ""
"The ``default`` corresponds to a stable mesa fallback build whereas "
"``host`` is for `unmaintained` Flatpak extensions installed on host."
msgstr ""

#: ../../extension.rst:171
msgid ""
"The resultant extension is called ``org.freedesktop.Platform.GL.default``"
" and it is downloaded and enabled automatically if ``active-gl-driver`` "
"is true and deleted if only it is false."
msgstr ""

#: ../../extension.rst:175
msgid ""
"The following conditionals are available: download-if, autoprune-unless "
"enable-if."
msgstr ""

#: ../../extension.rst:178
msgid "``download-if`` and ``enable-if`` supports the following:"
msgstr ""

#: ../../extension.rst:180
msgid "``active-gl-driver``"
msgstr ""

#: ../../extension.rst:181
msgid ""
"``active-gtk-theme`` is true if the host GTK theme via "
"``org.gnome.desktop.interface`` matches the extension basename."
msgstr ""

#: ../../extension.rst:183
msgid "``have-intel-gpu`` is true if the i915 kernel module is loaded."
msgstr ""

#: ../../extension.rst:184
#, python-brace-format
msgid ""
"``have-kernel-module-{module_name}`` is true if ``module_name`` is found "
"in ``/proc/modules``."
msgstr ""

#: ../../extension.rst:186
#, python-brace-format
msgid ""
"``on-xdg-desktop-{desktop_name}`` is true if ``desktop_name`` matches the"
" value of ``XDG_CURRENT_DESKTOP`` on host."
msgstr ""

#: ../../extension.rst:189
msgid ""
"``autoprune-unless`` supports only ``active-gl-driver``. If this "
"evaluates to ``false`` the extension will be considered unused and "
"removed automatically when doing ``flatpak uninstall --unused``."
msgstr ""

#: ../../extension.rst:194
msgid "Loading existing extensions"
msgstr ""

#: ../../extension.rst:196
msgid ""
"This is a typical example of loading an existing extension in the "
"application. The extension is loaded at runtime and the user needs to "
"have it installed."
msgstr ""

#: ../../extension.rst:200
msgid "The extensions are mounted in alphabetical path order of directory."
msgstr ""

#: ../../extension.rst:204
msgid ""
"Some extensions are installed automatically by the runtime based on "
"certain conditions and these do not need be added to application "
"manifests. Please see below for the purpose of extensions or extension "
"points defined in the runtime. Similarly extensions created by Flatpak "
"builder like ``.Locale, .Debug`` also do not need to be in application "
"manifest."
msgstr ""

#: ../../extension.rst:211
msgid ""
"``org.freedesktop.Platform.ffmpeg-full`` is an application extension "
"(mounted inside ``/app/extension_directory``) belonging to "
"``org.freedesktop.Platform``."
msgstr ""

#: ../../extension.rst:230
msgid ""
"``org.freedesktop.Sdk.Extension`` is an extension point defined in "
"``org.freedesktop.Sdk``."
msgstr ""

#: ../../extension.rst:247
msgid ""
"Note that ``Compat`` or ``GL32`` extensions need to specifically "
"requested. For providing runtime i386 support or for building i386 "
"modules, please refer to :doc:`multiarch`."
msgstr ""

#: ../../extension.rst:251
msgid ""
"There is currently no way to `request` autodownload of a runtime "
"extension from an application. The extension point in the runtime has to "
"be set to autodownload or the user has to manually install it."
msgstr ""

#: ../../extension.rst:255
msgid ""
"A few related extension properties can be found in application or runtime"
" manifests. These are:"
msgstr ""

#: ../../extension.rst:258
msgid ""
"``inherit-extensions`` can be used to specify an extra set of extension "
"points or extensions from the parent runtime or base that is inherited "
"into the application or the current runtime. This for example, can be "
"used to inherit i386 graphics drivers ``org.freedesktop.Platform.GL32`` "
"or ffmpeg ``org.freedesktop.Platform.ffmpeg-full`` in any application "
"that uses the ``org.freedesktop.Platform`` runtime or a child runtime of "
"it."
msgstr ""

#: ../../extension.rst:281
msgid ""
"``add-build-extensions`` is same as ``add-extensions`` but the extensions"
" are made available during build. This can be used to add build "
"dependencies that reside in an extension based on the runtime being used."
msgstr ""

#: ../../extension.rst:286
msgid ""
"For example an application using the runtime ``org.freedesktop.Platform``"
" can use ``org.freedesktop.Sdk.Extension.openjdk11`` as a build-"
"extension."
msgstr ""

#: ../../extension.rst:300
msgid ""
"``sdk-extensions`` can be used to install extra extensions having an "
"extension point in the parent runtime that has to be installed for the "
"app to build. These are similarly made available during build and not in "
"the final flatpak."
msgstr ""

#: ../../extension.rst:315
msgid ""
"``inherit-sdk-extensions`` is used to inherit extension points from the "
"parent SDK into the child SDK. They aren't inherited into the child "
"runtime. This is usually used when building runtimes or SDKs and not in "
"applications."
msgstr ""

#: ../../extension.rst:328
msgid ""
"There is currently no way to add or inherit extensions per-arch. This "
"means the extension should be available or made available for all the "
"arches used by the application and vice-versa."
msgstr ""

#: ../../extension.rst:332
msgid ""
"This also means that certain extensions like i386 compatibility "
"extensions like ``org.freedesktop.Sdk.Compat.i386`` should not be added "
"to modules that build for ``aarch64``."
msgstr ""

#: ../../extension.rst:337
msgid "Extension manifest"
msgstr ""

#: ../../extension.rst:339
msgid ""
"Once the extension point is defined, an extension like "
"``org.flatpak.app.plugin.foo`` can be created."
msgstr ""

#: ../../extension.rst:342
msgid ""
"This is a typical example of such an extension manifest. The explanation "
"is discussed below."
msgstr ""

#: ../../extension.rst:368
msgid "``id`` must have the correct prefix of the extension point."
msgstr ""

#: ../../extension.rst:369
msgid "``branch`` must be the ``version`` declared in the extension point."
msgstr ""

#: ../../extension.rst:370
msgid ""
"``runtime`` should be the ID of the parent module where the extension "
"point is defined."
msgstr ""

#: ../../extension.rst:372
msgid ""
"``runtime-version`` is the version of the runtime used by the "
"application. If the runtime is built locally and has not specified the "
"``branch`` property in its manifest, it defaults to ``master``, otherwise"
" the value in ``branch`` is used."
msgstr ""

#: ../../extension.rst:377
msgid "Applications on Flathub usually use either ``stable`` or ``beta``."
msgstr ""

#: ../../extension.rst:378
msgid ""
"``sdk`` should be the same SDK used to build the runtime, followed by its"
" version."
msgstr ""

#: ../../extension.rst:380
msgid "``build-extension: true`` instructs flatpak to build an extension."
msgstr ""

#: ../../extension.rst:381
msgid ""
"``separate-locales: false`` disables creating a ``.Locale`` extension for"
" this extension."
msgstr ""

#: ../../extension.rst:384
msgid ""
"Flatpak-builder (>= 1.3.4), can compose metadata for extensions "
"automatically and it is no longer required to manually compose them "
"through commands in the manifest."
msgstr ""

#: ../../extension.rst:388
#, python-brace-format
msgid ""
"In case a manual compose is still required ``appstream-compose "
"--basename=${FLATPAK_ID} --prefix=${FLATPAK_DEST} --origin=flatpak "
"${FLATPAK_ID}`` for composing with appstream-glib or ``appstreamcli "
"compose --components=${FLATPAK_ID} --prefix=/ --origin=${FLATPAK_ID} "
"--result-root=${FLATPAK_DEST} --data-dir=${FLATPAK_DEST}/share/app-"
"info/xmls ${FLATPAK_DEST}`` for composing with appstreamcli can be used "
"in ``build-commands`` or ``post-install`` along with having ``appstream-"
"compose: false`` in the top."
msgstr ""

#: ../../extension.rst:393
msgid ""
"Note that the extension prefix or location of pkg-config files will not "
"be in ``$PATH`` or ``$PKG_CONFIG_PATH`` by default. Any such additional "
"variables need to be set in ``build-options``. This is done using "
"``prefix`` and ``prepend-*`` properties."
msgstr ""

#: ../../extension.rst:398
msgid ""
"A MetaInfo file should be provided for discoverability in software "
"stores. This is a typical example of an extension MetaInfo file."
msgstr ""

#: ../../extension.rst:431
msgid "Bundled extensions"
msgstr ""

#: ../../extension.rst:433
msgid ""
"Extensions can also be built directly from the application manifest "
"instead of creating a separate extension manifest. The ``bundle: true`` "
"property allows exporting them as separate extensions from the "
"application manifest. The extension needs to be defined in the "
"application manifest using ``add-extensions``. The contents of the "
"``directory`` will be exported into that extension."
msgstr ""

#: ../../extension.rst:465
msgid "Unmaintained Flatpak extensions"
msgstr ""

#: ../../extension.rst:467
msgid ""
"Flatpak also supports `unmaintained extensions` that allows loading "
"extensions installed externally into ``/var/lib/flatpak/extension`` and "
"``$XDG_DATA_HOME/flatpak/extension`` from the host. This can be useful to"
" expose administrator policies, extensions, graphics drivers etc. to "
"Flatpak applications. The extension point of unmaintained extensions is "
"the same as above."
msgstr ""

#: ../../extension.rst:474
msgid ""
"An example of an unmaintained extension can be found in browsers such as "
"`Chromium "
"<https://github.com/flathub/org.chromium.Chromium/blob/dc7f731e7b62199a00bfa3ea3d123ff6d16936dc/org.chromium.Chromium.yaml>`_"
" or `Firefox <https://hg.mozilla.org/mozilla-"
"central/diff/59e57f57dcb73a286822276d02f16e7b17018de6/taskcluster/docker"
"/firefox-flatpak/runme.sh>`_ on Flathub."
msgstr ""

#: ../../extension.rst:479
msgid "The Firefox snippet translates to:"
msgstr ""

#: ../../extension.rst:490
msgid ""
"Now the required policy files for Firefox ``pref`` and ``policies.json`` "
"can be placed in "
"``/var/lib/flatpak/extension/org.mozilla.firefox.systemconfig/x86_64/stable/defaults/pref``"
" and "
"``/var/lib/flatpak/extension/org.mozilla.firefox.systemconfig/x86_64/stable/policies/policies.json``"
" (or in ``$XDG_DATA_HOME/flatpak/extension/...``) respectively on host. "
"The path here is dependent on the extension point. These would appear "
"under ``/app/etc/firefox/policies/policies.json`` and "
"``/app/etc/firefox/defaults/pref`` inside the sandbox. (Firefox `supports"
" <https://hg.mozilla.org/mozilla-"
"central/file/23ee4ac2d048de0aac3fa27ce7eb0925c1903096/xpcom/io/SpecialSystemDirectory.cpp#l198>`_"
" reading policies from ``/app/etc``)"
msgstr ""

#: ../../extension.rst:499
msgid ""
"For details on Chromium, please look at the `readme "
"<https://github.com/flathub/org.chromium.Chromium>`_."
msgstr ""

#: ../../extension.rst:503
msgid "Creating an unmaintained Gtk theme extension"
msgstr ""

#: ../../extension.rst:505
msgid ""
"The following script can be used to create an unmaintained extension for "
"the host's Gtk 3 theme. This is useful when the theme is not packaged as "
"an extension in a remote."
msgstr ""

#: ../../extension.rst:509
msgid ""
"The script expects the theme to be installed in ``/usr/share/themes`` or "
"``$XDG_DATA_HOME/themes``."
msgstr ""

#: ../../extension.rst:534
msgid "Extensions or extension points defined by runtime"
msgstr ""

#: ../../extension.rst:536
msgid ""
"The following extensions and extension points are defined in the "
"Freedesktop runtime/SDK or are shipped along with it. Most of these are "
"inherited by the GNOME and KDE runtimes as well. These may change over "
"time, please check the respective project."
msgstr ""

#: ../../extension.rst:541
msgid "These are common to the Freedesktop SDK and runtime:"
msgstr ""

#: ../../extension.rst:543
#, python-brace-format
msgid ""
"``org.freedesktop.Platform.GL`` – Extension for graphics drivers managed "
"by the runtime and installed or removed automatically. The default has "
"two branches ``${RUNTIME_VERSION}`` and ``${RUNTIME_VERSION}-extra``, the"
" latter containing support for patented codecs."
msgstr ""

#: ../../extension.rst:549
#, python-brace-format
msgid ""
"``org.freedesktop.Platform.GL.Debug`` – Debug extension point for "
"``org.freedesktop.Platform.GL``, managed by the runtime but the user "
"needs to explicitly install "
"``org.freedesktop.Platform.GL.Debug.default//${RUNTIME_VERSION}`` and "
"``org.freedesktop.Platform.GL.Debug.default//${RUNTIME_VERSION}-extra`` "
"to have the debug symbols available."
msgstr ""

#: ../../extension.rst:555
msgid "The following extensions utilise the above two extension points::"
msgstr ""

#: ../../extension.rst:570
msgid ""
"``org.freedesktop.Platform.VulkanLayer`` – Extension point for `Vulkan "
"layers <https://github.com/KhronosGroup/Vulkan-"
"Guide/blob/main/chapters/layers.md>`_. Developers can provide extensions "
"using this extension point and the user needs to install those extensions"
" to have them available."
msgstr ""

#: ../../extension.rst:574
msgid ""
"``org.freedesktop.Platform.GStreamer`` – Extension point for GStreamer "
"plugins. Developers can provide extensions using this extension point and"
" the user needs to install those extensions to have them available."
msgstr ""

#: ../../extension.rst:577
msgid ""
"``org.freedesktop.Platform.Icontheme`` – Extension point for icon themes."
" Developers can provide extensions using this extension point and the "
"user needs to install those extensions to have them available."
msgstr ""

#: ../../extension.rst:580
msgid ""
"``org.gtk.Gtk3theme`` – Extension point for Gtk3 themes. Extensions under"
" this extension point are automatically installed by Flatpak if an "
"extension matching the host theme is available. Developers can provide "
"extensions using this extension point."
msgstr ""

#: ../../extension.rst:584
msgid ""
"``org.freedesktop.Platform.VAAPI.Intel`` – Extension providing Intel "
"VAAPI media drivers. This is automatically installed if the user has an "
"Intel GPU."
msgstr ""

#: ../../extension.rst:588
msgid ""
"This has a compat i386 extension "
"``org.freedesktop.Platform.VAAPI.Intel.i386``."
msgstr ""

#: ../../extension.rst:590
msgid ""
"``org.freedesktop.Platform.openh264`` – Extension providing OpenH264, "
"automatically installed by the runtime."
msgstr ""

#: ../../extension.rst:592
msgid ""
"``org.freedesktop.Platform.ffmpeg`` – Extension providing ffmpeg with "
"support for patented codecs. This needs to explicitly added to the "
"manifest using ``add-extensions`` by the developer, so that it becomes "
"available when the user installs it."
msgstr ""

#: ../../extension.rst:597
msgid ""
"This has a compat i386 extension "
"``org.freedesktop.Platform.ffmpeg_full.i386``."
msgstr ""

#: ../../extension.rst:599
msgid "These are only in Freedesktop SDK:"
msgstr ""

#: ../../extension.rst:601
msgid ""
"``org.freedesktop.Sdk.Extension`` – Extension point for SDK extensions "
"like extra toolchains (eg. LLVM), compilers and language specific tools "
"to aid building applications or provide language support for development "
"tools such as IDEs."
msgstr ""

#: ../../extension.rst:606
msgid ""
"SDK extensions available on Flathub are listed `here "
"<https://github.com/orgs/flathub/repositories?q=org.freedesktop.Sdk.Extension.>`_."
msgstr ""

#: ../../extension.rst:609
msgid ""
"The application developer needs to explicitly add these extensions in the"
" manifest by using ``sdk-extensions`` when building an app."
msgstr ""

#: ../../extension.rst:612
msgid ""
"Extensions marked as ``Compat`` in the name or ``GL32`` provide compat "
"support for extra architectures and needs to explicitly requested."
msgstr ""

#: ../../extension.rst:615
msgid "Additionally all SDKs provide a ``.Docs`` extension for documentation."
msgstr ""

#~ msgid ""
#~ "If not specified it defaults to "
#~ "application or runtime branch of the "
#~ "extension point."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.VulkanLayer - Extension "
#~ "point for `Vulkan layers "
#~ "<https://github.com/KhronosGroup/Vulkan-"
#~ "Guide/blob/master/chapters/layers.md>`_. Developers can"
#~ " provide extensions using this extension"
#~ " point and the user needs to "
#~ "install those extensions to have them"
#~ " available."
#~ msgstr ""

#~ msgid ""
#~ "``org.freedesktop.Platform.ffmpeg-full`` is an "
#~ "application extension (mounted inside "
#~ "``/app/extension_directory``) belonging to "
#~ "org.freedesktop.Platform."
#~ msgstr ""

#~ msgid ""
#~ "``sdk-extensions`` can be used to "
#~ "install extra extensions having extension "
#~ "point in the parent runtime that "
#~ "has to be installed for the app"
#~ " to build. These are similarly made"
#~ " available during build and not in"
#~ " the final flatapk."
#~ msgstr ""

#~ msgid "These are common to the Freedesktop SDK and runtime."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.GL - Extension for "
#~ "graphics drivers managed by the runtime"
#~ " and installed or removed automatically."
#~ " The default has two branches "
#~ "``${RUNTIME_VERSION}`` and ``${RUNTIME_VERSION}-extra``,"
#~ " the latter containing support for "
#~ "patented codecs."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.GL.Debug - Debug extension"
#~ " point for org.freedesktop.Platform.GL, managed"
#~ " by the runtime but the user "
#~ "needs to explicitly install "
#~ "``org.freedesktop.Platform.GL.Debug.default//${RUNTIME_VERSION}`` "
#~ "and "
#~ "``org.freedesktop.Platform.GL.Debug.default//${RUNTIME_VERSION}-extra``"
#~ " to have the debug symbols available."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.VulkanLayer - Extension "
#~ "point for `Vulkan layers "
#~ "<https://github.com/KhronosGroup/Vulkan-"
#~ "Guide/blob/main/chapters/layers.md>`_. Developers can "
#~ "provide extensions using this extension "
#~ "point and the user needs to "
#~ "install those extensions to have them"
#~ " available."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.GStreamer - Extension point"
#~ " for GStreamer plugins. Developers can "
#~ "provide extensions using this extension "
#~ "point and the user needs to "
#~ "install those extensions to have them"
#~ " available."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.Icontheme - Extension point"
#~ " for icon themes. Developers can "
#~ "provide extensions using this extension "
#~ "point and the user needs to "
#~ "install those extensions to have them"
#~ " available."
#~ msgstr ""

#~ msgid ""
#~ "org.gtk.Gtk3theme - Extension point for "
#~ "Gtk3 themes. Extensions under this "
#~ "extension point are automatically installed"
#~ " by Flatpak if an extension matching"
#~ " the host theme is available. "
#~ "Developers can provide extensions using "
#~ "this extension point."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.VAAPI.Intel - Extension "
#~ "providing Intel VAAPI media drivers. "
#~ "This is automatically installed if the"
#~ " user has an Intel GPU."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.openh264 - Extension "
#~ "providing OpenH264, automatically installed by"
#~ " the runtime."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Platform.ffmpeg - Extension "
#~ "providing ffmpeg with support for "
#~ "patented codecs. This needs to "
#~ "explicitly added to the manifest using"
#~ " ``add-extensions`` by the developer, "
#~ "so that it becomes available when "
#~ "the user installs it."
#~ msgstr ""

#~ msgid "These are only in Freedesktop SDK."
#~ msgstr ""

#~ msgid ""
#~ "org.freedesktop.Sdk.Extension - Extension point "
#~ "for SDK extensions like extra toolchains"
#~ " (eg. LLVM), compilers and language "
#~ "specific tools to aid building "
#~ "applications or provide language support "
#~ "for development tools such as IDEs."
#~ msgstr ""

