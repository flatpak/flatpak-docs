# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, 2018, Flatpak Team. Licensed under Creative Commons
# Attribution 4.0 International License.
# This file is distributed under the same license as the Flatpak package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
# Baptiste Mille-Mathias <baptiste.millemathias@gmail.com>, 2018. #zanata
# TingPing <tingping@tingping.se>, 2018. #zanata
msgid ""
msgstr ""
"Project-Id-Version:  Flatpak\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-31 14:18-0300\n"
"PO-Revision-Date: 2018-05-20 11:20-0400\n"
"Last-Translator: Baptiste Mille-Mathias <baptiste.millemathias@gmail.com>"
"\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../building-introduction.rst:2
msgid "Building Introduction"
msgstr ""

#: ../../building-introduction.rst:4
msgid ""
":doc:`first-build` has already provided a quick demonstration of how "
"applications get built with Flatpak. This page provides an additional "
"general overview of what's involved."
msgstr ""

#: ../../building-introduction.rst:9
msgid "flatpak-builder"
msgstr "flatpak-builder"

#: ../../building-introduction.rst:11
msgid ""
"``flatpak-builder`` is the primary tool for building Flatpak "
"applications. It allows you to take the source files for an application "
"and build it into a Flatpak application. It also allows multiple other "
"dependencies to be built at the same time, which get bundled into the "
"build."
msgstr ""

#: ../../building-introduction.rst:16
msgid ""
"The input to ``flatpak-builder`` is a manifest file. This specifies the "
"parameters for the application that will be built, such as its name and "
"which runtime it will depend on. The manifest also lists all the modules "
"that are to be built as part of the build process. A source for each "
"module can be specified, including links to file archives or version "
"control repositories. One of the modules (usually the last one) is the "
"application code itself."
msgstr ""

#: ../../building-introduction.rst:24
msgid "The basic format used to invoke ``flatpak-builder`` is::"
msgstr ""

#: ../../building-introduction.rst:28
msgid ""
"Where ``<build-dir>`` is the path to the directory that the application "
"will be built into, and ``<manifest>`` is the path to a manifest file. "
"The contents of ``<build-dir>`` can be useful for testing and debugging "
"purposes, but is generally treated as an artifact of the build process."
msgstr ""

#: ../../building-introduction.rst:33
msgid "When ``flatpak-builder`` is run:"
msgstr ""

#: ../../building-introduction.rst:35
msgid "The build directory is created, if it doesn't already exist"
msgstr ""

#: ../../building-introduction.rst:36
msgid "The source code for each module is downloaded and verified"
msgstr ""

#: ../../building-introduction.rst:37
msgid "The source code for each module is built and installed"
msgstr ""

#: ../../building-introduction.rst:38
msgid "The build is finished by setting sandbox permissions"
msgstr ""

#: ../../building-introduction.rst:39
msgid ""
"The build result is exported to a repository (which will be created if it"
" doesn't exist already)"
msgstr ""

#: ../../building-introduction.rst:42
msgid "The application can then be installed from the repository and run."
msgstr ""

#: ../../building-introduction.rst:45
msgid "Software Development Kits (SDKs)"
msgstr ""

#: ../../building-introduction.rst:47
msgid ""
"Instead of being built using the host environment, Flatpak applications "
"are built inside a separate environment, called an SDK."
msgstr ""

#: ../../building-introduction.rst:50
msgid ""
"SDKs are like the regular runtime that applications run in. The "
"difference is that SDKs also include all the development resources and "
"tools that are required to build an application, such as build and "
"packaging tools, header files, compilers and debuggers."
msgstr ""

#: ../../building-introduction.rst:55
msgid ""
"Each runtime has an accompanying SDK. For example, there is both a GNOME "
"43 runtime and a GNOME 43 SDK. Applications that use the runtime are "
"built with the matching SDK."
msgstr ""

#: ../../building-introduction.rst:59
msgid ""
"Like runtimes, SDKs will sometimes be automatically installed for you, "
"but if you do need to manually install them, they are installed in the "
"same way as applications and runtimes, such as::"
msgstr ""

#~ msgid "The build is finished, by setting sandbox permissions"
#~ msgstr ""

#~ msgid ""
#~ "Like runtimes, SDKs will sometimes be"
#~ " automatically installed for you, but "
#~ "if you do need to manually install"
#~ " them, they are installed in the "
#~ "same was as applications and runtimes,"
#~ " such as::"
#~ msgstr ""

#~ msgid ""
#~ "Each runtime has an accompanying SDK."
#~ " For example, there is both a "
#~ "GNOME 3.26 runtime and a GNOME "
#~ "3.26 SDK. Applications that use the "
#~ "runtime are built with the matching "
#~ "SDK."
#~ msgstr ""

